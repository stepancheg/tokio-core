initSidebarItems({"macro":[["try_nb","A convenience macro for working with `io::Result<T>` from the `Read` and `Write` traits."]],"mod":[["io","I/O conveniences when working with primitives in `tokio-core`"]],"struct":[["AddSource","A future which will resolve a unique `tok` token for an I/O object."],["AddTimeout","Return value from the `LoopHandle::add_timeout` method, a future that will resolve to a `TimeoutToken` to configure the behavior of that timeout."],["IoToken","A token that identifies an active timeout."],["Loop","An event loop."],["LoopHandle","Handle to an event loop, used to construct I/O objects, send messages, and otherwise interact indirectly with the event loop itself."],["LoopPin","A non-sendable handle to an event loop, useful for manufacturing instances of `LoopData`."],["ReadinessStream","A concrete implementation of a stream of readiness notifications for I/O objects that originates from an event loop."],["Receiver","The receiving half of a channel used for processing messages sent by a `Sender`."],["Sender","The transmission half of a channel used for sending messages to a receiver."],["TcpListener","An I/O object representing a TCP socket listening for incoming connections."],["TcpStream","An I/O object representing a TCP stream connected to a remote endpoint."],["Timeout","A future representing the notification that a timeout has occurred."],["TimeoutToken","A token that identifies an active timeout."],["UdpSocket","An I/O object representing a UDP socket."]]});